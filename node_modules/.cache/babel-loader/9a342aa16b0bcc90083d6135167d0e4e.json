{"ast":null,"code":"var _jsxFileName = \"/Users/chasecollins/Documents/git/Semantic-UI-Challenge/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Table, Search, Grid, Header, Segment } from \"semantic-ui-react\";\n\nconst _ = require(\"underscore\");\n\nconst escapeRegExp = require(\"lodash.escaperegexp\");\n\nconst tableData = [{\n  username: \"richard\",\n  email: \"richard@sample.com\",\n  age: 20\n}, {\n  username: \"michael\",\n  email: \"michael@sample.com\",\n  age: 23\n}, {\n  username: \"diego\",\n  email: \"diego@sample.com\",\n  age: 24\n}, {\n  username: \"rene\",\n  email: \"rene@sample.com\",\n  age: 22\n}, {\n  username: \"agustin\",\n  email: \"agustin@sample.com\",\n  age: 32\n}];\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: tableData,\n      direction: null,\n      initialState: {\n        isLoading: false,\n        results: [],\n        value: \"\"\n      }\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const {\n        column,\n        data,\n        direction\n      } = this.state;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: \"ascending\"\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n      });\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(this.state.initialState);\n        const re = new RegExp(escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.data, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const {\n      column,\n      data,\n      direction,\n      isLoading,\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      sortable: true,\n      celled: true,\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"username\" ? direction : null,\n      onClick: this.handleSort(\"username\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"email\" ? direction : null,\n      onClick: this.handleSort(\"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      sorted: column === \"age\" ? direction : null,\n      onClick: this.handleSort(\"age\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Gender\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, _.map(data, ({\n      username,\n      email,\n      age\n    }) => /*#__PURE__*/React.createElement(Table.Row, {\n      key: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, username), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, email), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, age))))), /*#__PURE__*/React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, JSON.stringify(this.state, null, 2)), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, JSON.stringify(tableData, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chasecollins/Documents/git/Semantic-UI-Challenge/src/App.js"],"names":["React","Component","Fragment","Table","Search","Grid","Header","Segment","_","require","escapeRegExp","tableData","username","email","age","App","state","column","data","direction","initialState","isLoading","results","value","handleSort","clickedColumn","setState","sortBy","reverse","handleResultSelect","e","result","title","handleSearchChange","setTimeout","length","re","RegExp","isMatch","test","filter","render","map","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Table, Search, Grid, Header, Segment } from \"semantic-ui-react\";\nconst _ = require(\"underscore\");\nconst escapeRegExp = require(\"lodash.escaperegexp\");\n\nconst tableData = [\n  {\n    username: \"richard\",\n    email: \"richard@sample.com\",\n    age: 20,\n  },\n  {\n    username: \"michael\",\n    email: \"michael@sample.com\",\n    age: 23,\n  },\n  {\n    username: \"diego\",\n    email: \"diego@sample.com\",\n    age: 24,\n  },\n  {\n    username: \"rene\",\n    email: \"rene@sample.com\",\n    age: 22,\n  },\n  {\n    username: \"agustin\",\n    email: \"agustin@sample.com\",\n    age: 32,\n  },\n];\n\nexport default class App extends Component {\n  state = {\n    column: null,\n    data: tableData,\n    direction: null,\n    initialState: { isLoading: false, results: [], value: \"\" },\n  };\n\n  handleSort = (clickedColumn) => () => {\n    const { column, data, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: \"ascending\",\n      });\n      return;\n    }\n    this.setState({\n      data: data.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\n    });\n  };\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1)\n        return this.setState(this.state.initialState);\n\n      const re = new RegExp(escapeRegExp(this.state.value), \"i\");\n      const isMatch = (result) => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.data, isMatch),\n      });\n    }, 300);\n  };\n\n  render() {\n    const { column, data, direction, isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Table sortable celled fixed>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  sorted={column === \"username\" ? direction : null}\n                  onClick={this.handleSort(\"username\")}\n                >\n                  Name\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  sorted={column === \"email\" ? direction : null}\n                  onClick={this.handleSort(\"email\")}\n                >\n                  Age\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  sorted={column === \"age\" ? direction : null}\n                  onClick={this.handleSort(\"age\")}\n                >\n                  Gender\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {_.map(data, ({ username, email, age }) => (\n                <Table.Row key={username}>\n                  <Table.Cell>{username}</Table.Cell>\n                  <Table.Cell>{email}</Table.Cell>\n                  <Table.Cell>{age}</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header>State</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(this.state, null, 2)}\n            </pre>\n            <Header>Options</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(tableData, null, 2)}\n            </pre>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}